#! /usr/bin/env node

const path = require('path')
const mri = require('mri')
const kleur = require('kleur')

const { collectReasons, printReasons } = require('../index.js')

const help = `
  ${kleur.bold('npm-why')} - Identifies why a package has been installed.

  Usage

    $ npm-why <package-name>

  Examples

    $ npm-why babel-core
`

const args = mri(process.argv.slice(2), {
  boolean: ['help', 'version', 'noir'],
  alias: {
    h: 'help',
    v: 'version'
  }
})

if (args.help) {
  console.info(help)
} else if (args.version) {
  console.info(require('../package.json').version)
} else if (args._.length === 0) {
  kleur.enabled = !args.noir
  console.error(`\n  ${kleur.red('ERROR')} A <package-name> is required.`)
  process.exitCode = 1
} else {
  kleur.enabled = !args.noir
  const dir = process.cwd()
  const pkg = args._[0]
  main(dir, pkg)
}

/**
 * Run npm-why in a directory
 *
 * @param {String} dir Workding directory
 * @param {String} packageName The package to lookup
 */
async function main (dir, packageName) {
  const reasons = await collectReasons(dir, packageName)

  if (!reasons.length) {
    console.log(`\n  No one requires ${kleur.blue(packageName)}.`)
  } else {
    console.log(`\n  Who required ${kleur.blue(packageName)}:\n`)
    printReasons(reasons, path.parse(dir).name)
    console.log('\n')
  }
}
